Pandas là gì? Một thư viện mạnh mẽ trong Python dùng để phân tích, làm sạch, khám phá và thao tác với dữ liệu có cấu trúc (bảng, chuỗi thời gian).

import pandas as pd
import numpy as np
# Series: Một cột dữ liệu (mảng 1 chiều có nhãn).
# Tạo từ List, có thể tự định nghĩa index.
s = pd.Series([1, 7, 2, np.nan], index=['a', 'b', 'c', 'd'])

# DataFrame: Bảng dữ liệu 2 chiều (tập hợp các Series).
data = {'Tên': ['An', 'Bình', 'Chi', 'Dũng'],
        'Tuổi': [22, 25, 21, 30],
        'Điểm': [8.5, 9.0, 7.5, 8.0]}
df = pd.DataFrame(data)

# Thêm một cột mới
df['Tốt nghiệp'] = ['Có', 'Không', 'Có', 'Có']

# Xóa cột/hàng
df.drop('Tốt nghiệp', axis=1, inplace=True) # Xóa cột 'Tốt nghiệp' (axis=1 là cột)
df.drop(0, axis=0, inplace=True)            # Xóa hàng có index = 0 (axis=0 là hàng)

# Đổi tên cột
df.rename(columns={'Tên': 'Họ và Tên', 'Điểm': 'Điểm GPA'}, inplace=True)

# Thiết lập hiển thị
pd.options.display.max_rows = 100    # Tăng số hàng hiển thị tối đa
df.to_string()                       # In toàn bộ dataframe ra dạng chuỗi

#Reading & Writing Data
df_csv = pd.read_csv('file.csv')     # Đọc file CSV
df_excel = pd.read_excel('file.xlsx',# Đọc file Excel (cần cài `openpyxl`)
sheet_name='Sheet1')
df_json = pd.read_json('file.json')  # Đọc từ JSON
df_clipboard = pd.read_clipboard()   # Đọc từ clipboard (copy một bảng từ Excel/web và chạy lệnh này)

# -------------------------------------------------------------------

# index=False để không ghi cột index của DataFrame ra file
df.to_csv('output.csv', 
index=False)                         # Ghi ra file CSV
df.to_excel('output.xlsx', 
sheet_name='Data', index=False)      # Ghi ra file Excel


#Inspecting & Exploring
df.head(5)                           # 5 dòng đầu
df.tail(3)                           # 3 dòng cuối
df.shape
df.info()                            # Xem thông tin tổng quan: index, số lượng giá trị non-null, kiểu dữ liệu, bộ nhớ...
df.dtypes                            # Xem kiểu dữ liệu của từng cột
df.describe()                        # Thống kê mô tả cho các cột số (đếm, trung bình, độ lệch chuẩn, min, max,...)
df.count()                           # Đếm số lượng giá trị không rỗng ở mỗi cột
df['Tên'].value_counts()             # Đếm số lần xuất hiện của các giá trị duy nhất trong một cột (rất hữu ích!)
df['Tuổi'].unique()                  # Lấy các giá trị duy nhất của một cột

# Sắp xếp dữ liệu
df.sort_values(by='Tuổi', 
ascending=False)                     # Sắp xếp theo cột 'Tuổi' giảm dần


#Selecting & Filtering
# --- CHỌN CỘT ---
df['Tuổi']
df[['Tên', 'Điểm']]

# --- CHỌN HÀNG VÀ CỘT ---
# .loc: dùng NHÃN (label)
df.loc[0]
df.loc[[0, 2]]
df.loc[0, 'Tên']                   # Lấy giá trị tại hàng 0, cột 'Tên'
df.loc[0:2, ['Tên', 'Tuổi']]       # Lấy hàng từ index 0 đến 2, cột 'Tên' và 'Tuổi'

# --- CHỌN HÀNG VÀ CỘT ---
# .iloc: dùng VỊ TRÍ SỐ
df.iloc[0]    
df.iloc[0, 1] 
df.iloc[0:3, 0:2] 

# LỌC THEO ĐIỀU KIỆN
df[(df['Tuổi'] > 22) & (df['Điểm'] >= 8.5)]
df[df['Tên'].isin(['An', 'Chi'])]

#Cleaning

# Kiểm tra giá trị thiếu
df.isnull()       # isna() là alias
df.notnull()      # Kiểm tra các giá trị không thiếu

# Xóa hàng/cột có giá trị thiếu
# dùng inplace=True để thay đổi df gốc thay vì trả về một df mới
df.dropna()                     # Xóa tất cả các HÀNG có NaN
df.dropna(axis=1)               # Xóa tất cả các CỘT có NaN
df.dropna(subset=['Tuổi'], inplace=True) # Chỉ xóa hàng có NaN ở cột 'Tuổi'

# Lấp đầy các giá trị thiếu
df.fillna(value=0)              # Lấp đầy tất cả NaN bằng số 0
df['Điểm'].fillna(df['Điểm'].mean(), inplace=True) # Lấp đầy NaN cột 'Điểm' bằng giá trị trung bình
df.fillna(method='ffill') # Lấp bằng giá trị ngay phía trước

#Duplicates
# Xóa hàng trùng lặp dựa trên một vài cột cụ thể
df.drop_duplicates(subset=['Tên', 'Tuổi'], inplace=True)


# Gom nhóm theo một cột và tính toán (tổng, trung bình,...)

# numeric_only=True cần thiết khi có các cột không phải số
sales_df.groupby('Cửa hàng').mean(numeric_only=True)
sales_df.groupby('Cửa hàng')['Doanh thu'].sum() # Tính tổng doanh thu cho mỗi cửa hàng

# Gom nhóm theo nhiều cột
sales_df.groupby(['Cửa hàng', 'Sản phẩm'])['Doanh thu'].sum()

# Áp dụng nhiều hàm tính toán cùng lúc
sales_df.groupby('Cửa hàng')['Doanh thu'].agg(['sum', 'mean', 'count'])

# Tạo bảng tần suất chéo (Crosstab)
pd.crosstab(sales_df['Cửa hàng'], sales_df['Sản phẩm'])

# Merge
# Nối theo cột chung (giống JOIN trong SQL)
# how có thể là 'inner' (mặc định), 'left', 'right', 'outer'
pd.merge(df1, df2, on='key', how='left')

# Nối các DataFrame theo chiều dọc hoặc ngang
pd.concat([df1, df2], axis=0) # Nối theo chiều dọc (thêm hàng), mặc định
pd.concat([df1, df2], axis=1) # Nối theo chiều ngang (thêm cột)
